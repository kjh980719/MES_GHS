<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mes.app.mapper.code.CodeMapper">
    
    <select id="Storage_Row_S1_Str" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        {  call Storage_Row_S1_Str (
            #{STORAGE_CODE}
            )
        }
    </select>
    
    <update id="Storage_Update_U1_Str" statementType="CALLABLE" parameterType="HashMap">
        {  call Storage_Update_U1_Str (
            #{STORAGE_CODE },
            #{STORAGE_NAME1},
            #{STORAGE_NAME2},
            #{STORAGE_NAME3},
            #{STORAGE_NAME4},
            #{STORAGE_USEYN},
            )
        }
    </update>
    
    <select id="StorageListTotal" parameterType="HashMap" resultType="int">
        SELECT
       	 	COUNT(*) 
       	from storage_category A
       	WHERE ${sQuery}
    </select>
    
    <select id="StorageList" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        select

			U.no as no,
			U.STR_SEQ AS STR_SEQ,
			U.STOR_CD AS STOR_CD,
			U.STOR_NM AS STOR_NM
		from
				(SELECT
					(@ROWNUM:=@ROWNUM+1) as no,
					A.STR_SEQ AS STR_SEQ,
                    A.STOR_CD AS STOR_CD,
					A.STOR_NM AS STOR_NM
				FROM (SELECT @ROWNUM:=0) R,storage_category A 
        		where 
					${sQuery}	
					order by A.STOR_SORT ASC		
		        ) U
<!-- 		WHERE
			 U.no  -->
    </select>
    
    <select id="selectCate" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
       SELECT
				  STOR_CD
				, STOR_DEPTH
				, STOR_NAME
				, (SELECT COUNT(*) FROM storage_category WHERE STOR_UPPER = A.STOR_SEQ ) AS STOR_sub_cnt
	    FROM
				storage_category A
		WHERE
				STOR_UPPER = #{STOR_SEQ}
    </select>
    
    <select id="cupSql" statementType="CALLABLE" parameterType="String" resultType="Map">
		SELECT
				STOR_SEQ
				, STOR_CD
				, STOR_NAME
				, STOR_SORT
				, STOR_DEPTH
				, STOR_UPPER
		FROM
				storage_category
		WHERE
				STOR_SEQ = #{STOR_SEQ}
	</select>
	
	<select id="cate1Sql" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
		SELECT
				  *
				, ( SELECT COUNT(*) FROM storage_category WHERE STOR_DEPTH = 2 AND STOR_UPPER = A.STOR_SEQ ) AS STOR_SUB_CNT
		FROM
				storage_category A
		WHERE
					A.STOR_DEPTH = 1
		ORDER BY
				A.STOR_SORT ASC
	</select>
	
	<select id="cate2Sql" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
		SELECT
				*
				, ( SELECT COUNT(*) FROM storage_category WHERE STOR_DEPTH = #{STOR_NEXT_DEPTH} AND STOR_UPPER = A.STOR_SEQ ) AS STOR_SUB_CNT
		FROM
				storage_category A
		WHERE
					A.STOR_DEPTH = #{STOR_DEPTH}
				AND A.STOR_UPPER = #{STOR_UPPER}
		ORDER BY
				A.STOR_SORT ASC
	</select>
    
    <update id="cscSql" parameterType="HashMap">
		{  call 
				Storage_SortCheck_U1_Str (#{STOR_DEPTH}, #{STOR_UPPER}, #{STOR_SORT})
		}
	</update>
	
	<insert id="acSql" parameterType="HashMap">
		{  call 
				Storage_Insert_I1_Str(#{STOR_CD},#{STOR_NAME}, #{STOR_DEPTH},#{STOR2_UPPER},#{STOR3_UPPER},#{STOR4_UPPER}, #{STOR_SORT})
				}
	</insert>
	
	<update id="ucSql" parameterType="HashMap">
	     {  call 
				Storage_Update_U2_Str(#{STOR_DEPTH},#{STOR_CD},#{STOR_NAME},#{STOR_SORT},#{STOR_SEQ})
				}
	</update>
	
	<!-- <update id="ucSql2" parameterType="HashMap">
		UPDATE 
			storage_bycategory
		SET
			bySTOR_CD = (select top 1 BYSTOR_CD from storage_bycategory) 
		WHERE
			bySTOR_CD  = #{STOR_CD}
	</update> -->

	<select id="cucSql" parameterType="HashMap" resultType="int">
		SELECT
				COUNT(*)
		FROM
				storage_category
		WHERE
				STOR_UPPER = #{STOR_SEQ}		
	</select>
	
	<delete id="dcSql" parameterType="HashMap">
		DELETE
		FROM 
				storage_category
		WHERE
				STOR_SEQ = #{STOR_SEQ}
	</delete>


	 <!-- 	<select id="cucSql2" parameterType="HashMap" resultType="java.lang.Integer">
		SELECT 
					count(*)
		FROM 
					storage_bycategory A 
					INNER JOIN shop_product B ON A.bypdt_cd = B.pdt_cd 
					INNER JOIN tbl_member_partner C ON B.shop_id = C.mb_id
		WHERE 
					BYSTOR_CD = #{STOR_CD} AND B.pdt_viewyn = 'Y' AND B.pdt_stats NOT IN ('temp', 'hold') 
			AND 
					mb_is_live = 1 
			AND 
					mb_permit = 'P' 
			AND 	
					mb_useyn = 'Y'
	</select> -->

	 
	 <select id="cateSortForSelect" parameterType="HashMap" resultType="HashMap">
	SELECT 
		STOR_CD AS STOR_CD
	FROM 
		storage_category A 
	WHERE 
		A.STOR_DEPTH = #{STOR_DEPTH}
		AND A.STOR_UPPER = #{STOR_UPPER}
	ORDER BY A.STOR_SORT ASC 
	</select>
	 
	 <update id="cateSortForUpdate" parameterType="HashMap">
	UPDATE
		storage_category	SET
		STOR_SORT = #{STOR_SORT}
	WHERE
		STOR_DEPTH = #{STOR_DEPTH}
		AND STOR_UPPER = #{STOR_UPPER}
		AND STOR_CD = #{STOR_CD}
	
	</update>
	
	<select id="getStorageBarcodeList" parameterType="HashMap" resultType="HashMap">
	SELECT * FROM db_mes2020.storage_category where STOR_UPPER=#{STOR_SEQ};
	
	</select>

	<select id="selectStorageList" parameterType="HashMap" resultType="HashMap">
		select
			sub.*
		from (
				 select (@ROWNUM:=@ROWNUM+1) as no,
                    k.*
				 from
					 (
					 SELECT
					 A.STOR_SEQ AS stor_seq,
					 A.STOR_NAME AS stor_name,
					 B.STOR_SEQ AS zone_seq,
					 B.STOR_NAME AS zone_name,
					 C.STOR_SEQ AS detail_seq,
					 C.STOR_NAME AS detail_name,
					 CONCAT(A.STOR_SEQ,',',B.STOR_SEQ,',',C.STOR_SEQ) AS seq,
					 CONCAT(A.STOR_NAME,'/',B.STOR_NAME,'/',C.STOR_NAME) AS name
					 FROM
					 	STORAGE_CATEGORY A
					 	INNER JOIN STORAGE_CATEGORY B ON A.STOR_SEQ = B.STOR_UPPER
					 	INNER JOIN STORAGE_CATEGORY C ON B.STOR_SEQ = C.STOR_UPPER
					 WHERE ${sQuery}
					 ORDER BY A.STOR_SORT,B.STOR_SORT,C.STOR_SORT ASC
					 )k, (SELECT @ROWNUM := 0) R
			 ) sub
		WHERE sub.no BETWEEN ((#{currentPage} - 1) * #{rowsPerPage}) + 1 AND #{currentPage} * #{rowsPerPage}

	</select>
	<select id="selectStorageListTotal" parameterType="HashMap" resultType="int">
		SELECT
			count(*)
		FROM
			STORAGE_CATEGORY A
			INNER JOIN STORAGE_CATEGORY B ON A.STOR_SEQ = B.STOR_UPPER
			INNER JOIN STORAGE_CATEGORY C ON B.STOR_SEQ = C.STOR_UPPER
		WHERE ${sQuery}

	</select>
</mapper>
