<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mes.app.mapper.producePlan.ProducePlanMapper">

    <select id="producePlanListTotal"  parameterType="HashMap" resultType="int">
       	SELECT
       	 	COUNT(*) 
       	from producePlan A inner join producePlan_detail B on A.plan_code = B.plan_code 
		left outer join mes_department D on A.dpt_code = D.dpt_code
		left outer join cust F on A.cust_seq = F.cust_seq	
       	WHERE B.no = 1   
      	 	AND A.DELETE_YN = 'N'
			${sQuery}		
			<![CDATA[
				AND (A.STARTDATE >= #{startDate} and A.STARTDATE <= #{endDate} OR A.EndDate >= #{startDate} and A.ENDDATE <= #{endDate})
			]]>

    </select>
   
    
    
   <select id="producePlanList" parameterType="HashMap" resultType="Map">
		SELECT * FROM (
			SELECT 
				@ROWNUM := @ROWNUM+1 AS no,
				k.PLAN_CODE AS plan_code,
				k.DPT_NAME AS dpt_name,
				IFNULL(k.CUST_NAME, '') AS cust_name,
				convert(date_format(k.REG_DATE, '%Y-%m-%d'), char(10)) as regDate,
				k.PLANQTY AS planQty,
				k.PLAN_STATUS AS plan_status,
			   	case k.cnt when 1 then k.pdt_name_one else  concat(k.pdt_name_one, ' 외', (k.cnt-1), '건') end AS pdt_name  
			FROM
			    (
					select 					
						A.PLAN_CODE,
						IFNULL(F.CUST_NAME, '') as CUST_NAME,
						IFNULL(D.DPT_NAME, '') as DPT_NAME,									
						A.REG_DATE,
						A.PLAN_STATUS,
						( SELECT SUM(F.PLANQTY) FROM producePlan_detail F WHERE F.plan_code = A.plan_code)  as PLANQTY,						
					 	B.pdt_name as pdt_name_one ,
	                    ( SELECT COUNT(*) FROM producePlan_detail F WHERE F.plan_code = A.plan_code) AS cnt ,
	                    ( SELECT MAX(PDT_NAME) FROM producePlan_detail F WHERE F.plan_code = A.plan_code) AS pdt						
					from producePlan A 
						inner join producePlan_detail B on A.plan_code = B.plan_code
						inner join cust F on A.cust_seq = F.cust_seq
						left outer join mes_department D on A.dpt_code = D.dpt_code
					 ,(SELECT @ROWNUM:=0) R
					where B.no = 1 
						AND A.DELETE_YN = 'N'
						${sQuery}
						<![CDATA[
							AND (A.STARTDATE >= #{startDate} and A.STARTDATE <= #{endDate} OR A.EndDate >= #{startDate} and A.ENDDATE <= #{endDate})
						]]>
						order by A.reg_date desc
			        ) k
			)sub
			WHERE sub.no  BETWEEN ((#{currentPage}-1) * #{rowsPerPage}) + 1 AND #{currentPage} * #{rowsPerPage}
	
    </select>
    

     <select id="writeProducePlanDetail" statementType="CALLABLE" parameterType="HashMap">
	    {
	    	call ProducePlan_Detail_Create_I1_Str
	    	(
			    #{seq},
			    #{plan_code},
				#{pdt_cd},
			    #{pdt_code},
			    #{pdt_name},
			    #{pdt_standard},
			    #{planqty},
			    #{unit},
				#{bigo}
			)
			
	    }  	     
    </select>
    
    <select id="writeProducePlan" statementType="CALLABLE" parameterType="HashMap" resultType="String">
	    {
	    	call ProducePlan_Create_I1_Str
	    	(
	    		#{cust_seq}
	    	    ,#{dpt_code}
	    	    ,#{message}
	    	    ,#{start_date}
	    	    ,#{end_date}
	    	    ,#{work_type}
	    	    ,#{iManagerSeq}
	    	    ,#{plan_status}
	    	    ,#{plan_type}
	    	)
	    }

	</select>
	
   <select id="editProducePlanDetail" statementType="CALLABLE" parameterType="HashMap">
	    {
	    	call ProducePlan_Detail_Update_U1_Str
	    	(
			    #{seq},
			    #{plan_code},
	    	    #{pdt_cd},
			    #{pdt_code},
			    #{pdt_name},
			    #{pdt_standard},
			    #{planqty},
			    #{unit},
				#{bigo}
			)
			
	    }  	     
    </select>
    
    <select id="editProducePlan" statementType="CALLABLE" parameterType="HashMap" resultType="String">
	    {
	    	call ProducePlan_Update_U1_Str
	    	(
	    		#{plan_code},
	    	    #{cust_seq},
	    	    #{dpt_code},
	    	    #{message},
	    	    #{start_date},
	    	    #{end_date},
	    	    #{work_type},
	    	    #{iManagerSeq},
	    	    #{plan_status}
	    	)
	    }

	</select>
    
    
    <select id="view" parameterType="HashMap" resultType="HashMap">
			select 					
				A.PLAN_CODE AS plan_code,
				A.DPT_CODE AS dpt_code,
				IFNULL(D.DPT_NAME, '') AS dpt_name,
				IFNULL(A.cust_seq, 0) AS cust_seq,
				IFNULL(F.CUST_NAME, '') AS cust_name,				
				A.MESSAGE AS message,
				convert(date_format(A.STARTDATE, '%Y-%m-%d'), char(10)) as startDate,
				convert(date_format(A.ENDDATE, '%Y-%m-%d'), char(10)) as endDate,
				A.PLAN_STATUS AS plan_status,
				A.WORK_TYPE AS work_type,			
				B.NO AS no,
				B.PDT_CD AS pdt_cd,
				B.PDT_CODE AS pdt_code,
				B.PDT_NAME AS pdt_name,
				IFNULL(B.PDT_STANDARD,'') as pdt_standard,
				IFNULL(B.UNIT,'') as unit,
				B.PLANQTY as planqty,
				IFNULL(B.BIGO,'') as bigo
      		from produceplan A 
				inner join produceplan_detail B on A.plan_code = B.plan_code
				inner join cust F on A.cust_seq = F.cust_seq
				left outer join mes_department D on A.dpt_code = D.dpt_code
			WHERE
				A.PLAN_CODE = #{plan_code}	
		
    </select>
    <update id="statusUpdate" parameterType="hashMap">
    	UPDATE produceplan
    		SET PLAN_STATUS = #{plan_status}
    			,MOD_BY =  #{iManagerSeq}
    	WHERE
    		PLAN_CODE = #{plan_code}  
    </update>
    
   <update id="delete" parameterType="hashMap">
    	UPDATE produceplan
    		SET
    			DELETE_YN = 'Y'
    			,DELETE_DATE = now()
    			,DELETE_BY = #{iManagerSeq}
    		WHERE 
    			PLAN_CODE = #{plan_code}
    </update>
 
    
  
</mapper>
