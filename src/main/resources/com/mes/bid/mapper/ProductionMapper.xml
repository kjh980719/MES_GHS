<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mes.app.mapper.product.ProductionMapper">

    
    <select id="Production_Create_I1_Str" statementType="CALLABLE" parameterType="HashMap" resultType="String">
    {
        call Production_Create_I1_Str
        (
            #{manager_seq},
            #{plan_code},
            #{production_date},
            #{iManager_seq},
            #{product_line}
        )
    }
    </select>


    <select id="Production_Detail_Create_I1_Str"  statementType="CALLABLE" parameterType="HashMap">
        {
            call Production_Detail_Create_I1_Str
            (
                #{seq},
                #{production_code},
                #{product_line},
                #{pdt_cd},
                #{pdt_code},
                #{pdt_name},
                #{planqty},
                #{realqty},
                #{defectqty},
                #{bad_reason},
                #{bigo}
            )
        }
    </select>



    <select id="productionListTotal" parameterType="HashMap" resultType="int">

        SELECT COUNT(*)
        from mes_production A
                 inner join mes_production_detail B on A.production_code = B.production_code
                 inner join manager_list C on A.manager_seq = C.manager_seq
                 inner join manager_auth_group D on C.auth_group_seq = D.auth_group_seq
        WHERE B.no = 1
            AND A.DELETE_YN = 'N' ${sQuery}
        <![CDATA[
            AND A.PRODUCTION_DATE BETWEEN #{startDate} and #{endDate}
        ]]>
    </select>



    <select id="productionList" parameterType="HashMap" resultType="Map">
        SELECT *
        FROM (
                 SELECT
                    @ROWNUM := @ROWNUM+1 AS no,
                    k.PRODUCTION_CODE AS production_code,
                    k.PLAN_CODE AS plan_code,
                    convert(date_format(k.PRODUCTION_DATE, '%Y-%m-%d'), char(10)) as production_date,
                    k.REALQTY AS realQty,
                    k.DEFECTQTY AS defectQty,
                    k.PLAN_STATUS AS plan_status,
                    (SELECT Convert_Location(K.PRODUCT_LINE,'L')) AS product_line,
                    case k.cnt when 1 then k.pdt_name_one else  concat(k.pdt_name_one, ' 외', (k.cnt-1), '건') end AS pdt_name,
                    k.MANAGER_NAME AS managerName,
                    k.MANAGER_POSITION AS managerPosition,
                    k.AUTH_GROUP_NAME AS groupName
                 FROM
                     (
                     select
                         A.PRODUCTION_CODE,
                         IFNULL(A.PLAN_CODE,'') AS PLAN_CODE,
                         A.PRODUCTION_DATE,
                         A.PRODUCT_LINE,
                        E.PLAN_STATUS,
                         ( SELECT SUM(F.REALQTY) FROM mes_production_detail F WHERE F.production_code = A.production_code)  as REALQTY,
                        ( SELECT SUM(F.DEFECTQTY) FROM mes_production_detail F WHERE F.production_code = A.production_code)  as DEFECTQTY,
                         B.pdt_name as pdt_name_one ,
                         ( SELECT COUNT(*) FROM mes_production_detail F WHERE F.production_code = A.production_code) AS cnt ,
                         ( SELECT MAX(PDT_NAME) FROM mes_production_detail F WHERE F.production_code = A.production_code) AS pdt,
                         C.MANAGER_NAME,
                         C.MANAGER_POSITION,
                         D.AUTH_GROUP_NAME
                     from mes_production A
                     inner join mes_production_detail B on A.production_code = B.production_code
                     inner join manager_list C on A.manager_seq = C.manager_seq
                     inner join manager_auth_group D on C.auth_group_seq = D.auth_group_seq
                     inner join workplan E on A.plan_code = E.plan_code
                         , (SELECT @ROWNUM := 0) R
                     where B.no = 1
                        AND A.DELETE_YN = 'N'
                        ${sQuery}
                     <![CDATA[
                        AND A.PRODUCTION_DATE BETWEEN #{startDate} and #{endDate}
                    ]]>
                         order by A.reg_date desc
                     ) k
             ) sub
        WHERE sub.no BETWEEN ((#{currentPage} - 1) * #{rowsPerPage}) + 1 AND #{currentPage} * #{rowsPerPage}

    </select>

    <select id="view" parameterType="HashMap" resultType="HashMap">
        select
            A.PRODUCTION_CODE AS production_code,
            IFNULL(A.PLAN_CODE,'') AS plan_code,
            convert(date_format(A.PRODUCTION_DATE, '%Y-%m-%d'), char(10)) as production_date,
            A.PRODUCT_LINE AS product_line,
            E.PLAN_STATUS AS plan_status,
            IFNULL(C.MANAGER_NAME,'') AS managerName,
            IFNULL(D.AUTH_GROUP_NAME,'') AS groupName,
            IFNULL(A.MANAGER_SEQ,'') AS manager_seq,
            IFNULL(C.MANAGER_POSITION,'') AS manager_position,
            B.NO AS no,
			B.PDT_CD AS pdt_cd,
			B.PDT_CODE AS pdt_code,
			B.PDT_NAME AS pdt_name,
			B.PLANQTY as planqty,
            B.REALQTY as realqty,
            B.DEFECTQTY as defectqty,
            B.BAD_REASON as bad_reason,
            IFNULL(B.BIGO,'') as bigo
        from mes_production A
            inner join mes_production_detail B on A.production_code = B.production_code
            inner join manager_list C on A.manager_seq = C.manager_seq
            inner join manager_auth_group D on C.auth_group_seq = D.auth_group_seq
            inner join workplan E on A.plan_code = E.plan_code
        WHERE
            A.PRODUCTION_CODE = #{production_code}

    </select>

    <select id="editProductionDetail" statementType="CALLABLE" parameterType="HashMap">
        {
            call Production_Detail_Update_U1_Str
            (
                #{seq},
                #{production_code},
                #{product_line},
                #{pdt_cd},
                #{pdt_code},
                #{pdt_name},
                #{planqty},
                #{realqty},
                #{defectqty},
                #{bad_reason},
                #{bigo}
            )

            }
    </select>

    <select id="editProduction" statementType="CALLABLE" parameterType="HashMap" >
        {
            call Production_Update_U1_Str
            (
                #{manager_seq},
                #{production_code},
                #{production_date},
                #{iManager_seq}
            )
        }

    </select>


    <select id="delete" statementType="CALLABLE" parameterType="HashMap">
        {
            call Production_Delete_D1_Str
            (
                #{production_code},
                #{iManagerSeq}
            )
         }
    </select>


    <select id="Production_Update_WorkPlan_U1_Str" statementType="CALLABLE" parameterType="HashMap">
        {
            call Production_Update_WorkPlan_U1_Str
            (
                #{plan_code},
                #{iManagerSeq}
            )
        }
    </select>



</mapper>
