<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mes.app.mapper.productionLine.ProductionLineMapper">
    <select id="Production_Line_S1_Str" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        {  call Production_Line_S1_Str (
            #{authGroupSeq},
            #{authGroupName},
            #{useYn},
            #{lineLevel},
            #{lineSeq}
            )
        }
    </select>
<!--     <select id="Manager_Menu_i1_Str" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        {  call Manager_Menu_i1_Str (
            #{displayYn},
            #{displayOrder},
            #{parentMenuSeq},
            #{menuName},
            #{programUrl},
            #{loginUserSeq}
            )
        }
    </select>
    <select id="Manager_Menu_U1_Str" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        {  call Manager_Menu_U1_Str (
            #{displayYn},
            #{displayOrder},
            #{parentMenuSeq},
            #{menuSeq},
            #{menuName},
            #{programUrl},
            #{loginUserSeq}
            )
        }
    </select> -->

    
    <select id="Production_Line_i1_Str" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        {  call Production_Line_i1_Str (
            #{parent_line_seq},
            #{line_name},
            #{etc},
            #{use_yn},
            #{display_order},
            #{loginUserSeq},
            #{depth}
            )
        }
    </select>
    
    <update id="Production_Line_U1_Str" parameterType="HashMap">
      	{
      		call Production_Line_U1_Str(
      			#{line_seq},
      			#{display_order},
      			#{line_name},
      			#{use_yn},
      			#{etc},
      			#{loginUserSeq}		
      		)
      	}
    </update> 
    
    <select id="Production_Line_U2_Str" statementType="CALLABLE" parameterType="HashMap" resultType="Map">
        {  call Production_Line_U2_Str (
            #{displayOrder},
            #{parentLineSeq},
            #{lineSeq},
            #{loginUserSeq}
            )
        }
    </select>
    
     
     
     <select id="getProduction_Line_Depth1_List" resultType="Map">
       	SELECT 
       		line_seq
       		,parent_line_seq
			,line_name
			,etc
			,use_yn
			,display_order
			,depth
		FROM Production_Line where depth = 1
        order by display_order asc
    </select>
    
         
     <select id="depthInfo" parameterType="HashMap" resultType="Map">
		SELECT 
       		a.line_seq
            ,a.parent_line_seq
       		,IFNULL((select line_name from Production_Line where line_seq = a.parent_line_seq),'')parent_line_name
			,a.line_name
			,a.etc
			,a.use_yn
			,a.display_order
			,a.depth
		FROM Production_Line a where line_seq = #{line_seq}
    </select>
             
     <select id="viewDepth" parameterType="HashMap" resultType="Map">
       	SELECT 
       		line_seq
       		,parent_line_seq
			,line_name
			,etc
			,use_yn
			,display_order
			,depth
		FROM Production_Line where parent_line_seq = #{line_seq} order by display_order asc
    </select>

    <select id="getProductionList" statementType="CALLABLE" parameterType="HashMap" resultType="HashMap">
        select
               sub.*
        from (
                 select (@ROWNUM:=@ROWNUM+1) as no,
                    k.*
                 from
                     (
                     SELECT
                     A.LINE_SEQ AS parent_line_seq,
                     A.LINE_NAME AS factory_name,
                     B.LINE_NAME AS line_name,
                     CONCAT(A.LINE_NAME, ' ', B.LINE_NAME) AS name,
                     B.LINE_SEQ AS line_seq,
                     CONCAT(A.LINE_SEQ, ',', B.LINE_SEQ) AS seq
                     FROM
                     PRODUCTION_LINE A INNER JOIN PRODUCTION_LINE B ON A.LINE_SEQ = B.PARENT_LINE_SEQ
                     where ${sQuery}
                     order by A.DISPLAY_ORDER,B.DISPLAY_ORDER asc
                     ) k, (SELECT @ROWNUM := 0) R
             ) sub
        WHERE sub.no BETWEEN ((#{currentPage} - 1) * #{rowsPerPage}) + 1 AND #{currentPage} * #{rowsPerPage}

    </select>

    <select id="getProductionListTotal" statementType="CALLABLE" parameterType="HashMap" resultType="int">

        SELECT
            count(*)
        FROM
            PRODUCTION_LINE A INNER JOIN PRODUCTION_LINE B ON A.LINE_SEQ = B.PARENT_LINE_SEQ
            , (SELECT @ROWNUM:=0) R
        where ${sQuery}
    </select>


</mapper>